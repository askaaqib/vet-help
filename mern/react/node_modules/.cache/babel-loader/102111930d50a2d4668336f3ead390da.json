{"ast":null,"code":"import _classCallCheck from \"/home/shah/Public/projects/keltjw/mern/react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/shah/Public/projects/keltjw/mern/react/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/shah/Public/projects/keltjw/mern/react/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/shah/Public/projects/keltjw/mern/react/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/shah/Public/projects/keltjw/mern/react/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/shah/Public/projects/keltjw/mern/react/src/components/requestHelp.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux'; // import { Skylink } from 'skylinkjs';\n\nimport \"//cdn.temasys.io/skylink/skylinkjs/0.6.x/skylink.complete.js\";\n\nvar RequestHelp =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(RequestHelp, _Component);\n\n  function RequestHelp(props) {\n    var _this;\n\n    _classCallCheck(this, RequestHelp);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RequestHelp).call(this, props));\n    _this.state = {}; // Here's a simple example on how you can start using Skylink.\n\n    return _this;\n  }\n\n  _createClass(RequestHelp, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (!this.props.auth.isAuthenticated) {\n        this.props.history.push('/login');\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var skylink = new Skylink();\n      skylink.setLogLevel(4);\n      skylink.on('peerJoined', function (peerId, peerInfo, isSelf) {\n        if (isSelf) return; // We already have a video element for our video and don't need to create a new one.\n\n        var vid = document.createElement('video');\n        vid.autoplay = true;\n        vid.controls = true;\n        vid.setAttribute('playsinline', true);\n        vid.muted = true; // Added to avoid feedback when testing locally\n\n        vid.id = peerId;\n        document.body.appendChild(vid);\n      });\n      skylink.on('incomingStream', function (peerId, stream, isSelf) {\n        if (isSelf) return;\n        var vid = document.getElementById(peerId);\n        attachMediaStream(vid, stream);\n      });\n      skylink.on('peerLeft', function (peerId) {\n        var vid = document.getElementById(peerId);\n        document.body.removeChild(vid);\n      });\n      skylink.on('mediaAccessSuccess', function (stream) {\n        var vid = document.getElementById('myvideo');\n        attachMediaStream(vid, stream);\n      });\n      skylink.init({\n        apiKey: 'f1773757-5f8b-42dc-b1ef-2374066866f6',\n        // Get your own key at https://console.temasys.io\n        defaultRoom: 'GogabE' //getRoomId()\n\n      }, function (error, success) {\n        if (error) {\n          document.getElementById('status').innerHTML = 'Failed retrieval for room information.<br>Error: ' + (error.error.message || error.error);\n        } else {\n          document.getElementById('status').innerHTML = 'Room information has been loaded. Room is ready for user to join.';\n          document.getElementById('start').style.display = 'block';\n        }\n      });\n\n      function start(event) {\n        event.target.style.visibility = 'hidden';\n        skylink.joinRoom({\n          audio: true,\n          video: true\n        }, function (error, success) {\n          if (error) {\n            document.getElementById('status').innerHTML = 'Failed joining room.<br>' + 'Error: ' + (error.error.message || error.error);\n          } else {\n            document.getElementById('status').innerHTML = 'Joined room.';\n          }\n        });\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"video\", {\n        id: \"myvideo\",\n        style: \"transform: rotateY(-180deg);\",\n        autoplay: true,\n        muted: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return RequestHelp;\n}(Component);\n\nRequestHelp.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth\n  };\n};\n\nexport default connect(mapStateToProps)(RequestHelp);","map":{"version":3,"sources":["/home/shah/Public/projects/keltjw/mern/react/src/components/requestHelp.js"],"names":["React","Component","Link","PropTypes","connect","RequestHelp","props","state","auth","isAuthenticated","history","push","skylink","Skylink","setLogLevel","on","peerId","peerInfo","isSelf","vid","document","createElement","autoplay","controls","setAttribute","muted","id","body","appendChild","stream","getElementById","attachMediaStream","removeChild","init","apiKey","defaultRoom","error","success","innerHTML","message","style","display","start","event","target","visibility","joinRoom","audio","video","propTypes","object","isRequired","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n// import { Skylink } from 'skylinkjs';\nimport \"//cdn.temasys.io/skylink/skylinkjs/0.6.x/skylink.complete.js\";\n\nclass RequestHelp extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {  }\n\n         // Here's a simple example on how you can start using Skylink.\n  \n  \n    }\n\n    componentDidMount() {\n        if(!this.props.auth.isAuthenticated) {\n            this.props.history.push('/login');\n        }\n    }\n\n\n    render() { \n        var skylink = new Skylink();\n  skylink.setLogLevel(4);\n  skylink.on('peerJoined', function(peerId, peerInfo, isSelf) {\n    if(isSelf) return; // We already have a video element for our video and don't need to create a new one.\n    var vid = document.createElement('video');\n    vid.autoplay = true;\n    vid.controls = true;\n    vid.setAttribute('playsinline', true);\n    vid.muted = true; // Added to avoid feedback when testing locally\n    vid.id = peerId;\n    document.body.appendChild(vid);\n  });\n  \n  skylink.on('incomingStream', function(peerId, stream, isSelf) {\n    if(isSelf) return;\n    var vid = document.getElementById(peerId);\n    attachMediaStream(vid, stream);\n  });\n  \n  skylink.on('peerLeft', function(peerId) {\n    var vid = document.getElementById(peerId);\n    document.body.removeChild(vid);\n  });\n  \n  skylink.on('mediaAccessSuccess', function(stream) {\n    var vid = document.getElementById('myvideo');\n    attachMediaStream(vid, stream);\n  });\n  \n  skylink.init({\n    apiKey: 'f1773757-5f8b-42dc-b1ef-2374066866f6', // Get your own key at https://console.temasys.io\n    defaultRoom: 'GogabE'//getRoomId()\n  }, function (error, success) {\n    if (error) {\n      document.getElementById('status').innerHTML = 'Failed retrieval for room information.<br>Error: ' + (error.error.message || error.error);\n    } else {\n         document.getElementById('status').innerHTML = 'Room information has been loaded. Room is ready for user to join.';\n      document.getElementById('start').style.display = 'block';\n    }\n  });\n  \n  function start(event) {\n    event.target.style.visibility = 'hidden';\n    \n    skylink.joinRoom({\n      audio: true,\n      video: true\n    }, function (error, success) {\n      if (error) {\n        document.getElementById('status').innerHTML = 'Failed joining room.<br>' +\n    'Error: ' + (error.error.message || error.error);\n      } else {\n        document.getElementById('status').innerHTML = 'Joined room.';\n      }\n    });\n  }\n        return ( \n            <div>\n                <video id=\"myvideo\" style=\"transform: rotateY(-180deg);\" autoplay muted></video>\n            </div>\n\n         );\n    }\n}\n\n\n \nRequestHelp.propTypes = {\n    auth: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = (state) => ({\n    auth: state.auth,\n})\n\nexport  default connect(mapStateToProps)(RequestHelp)"]},"metadata":{},"sourceType":"module"}