{"ast":null,"code":"// store.js\nimport { createStore, applyMiddleware } from 'redux';\nimport rootReducer from '../reducers/rootReducer';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\nimport { createLogger } from 'redux-logger';\nvar logger = createLogger({\n  /* https://github.com/evgenyrodionov/redux-logger */\n  collapsed: true,\n  diff: true\n});\n\nvar store = function store(initialState) {\n  return createStore(rootReducer, initialState, composeWithDevTools(\n  /* logger must be the last middleware in chain to log actions */\n  applyMiddleware(thunk, logger)));\n}; // export default configureStore;\n\n\nexport default store;","map":{"version":3,"sources":["/home/shah/Public/projects/keltjw/mern/frontend/src/store.js"],"names":["createStore","applyMiddleware","rootReducer","thunk","composeWithDevTools","createLogger","logger","collapsed","diff","store","initialState"],"mappings":"AAAA;AAEA,SAAQA,WAAR,EAAqBC,eAArB,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAAQC,mBAAR,QAAkC,0CAAlC;AACA,SAAQC,YAAR,QAA2B,cAA3B;AAEA,IAAMC,MAAM,GAAGD,YAAY,CAAC;AACxB;AACAE,EAAAA,SAAS,EAAE,IAFa;AAGxBC,EAAAA,IAAI,EAAE;AAHkB,CAAD,CAA3B;;AAMA,IAAOC,KAAK,GAAG,SAARA,KAAQ,CAAUC,YAAV,EAAwB;AACnC,SAAOV,WAAW,CACdE,WADc,EAEdQ,YAFc,EAGdN,mBAAmB;AACf;AACAH,EAAAA,eAAe,CAACE,KAAD,EAAQG,MAAR,CAFA,CAHL,CAAlB;AAQH,CATD,C,CAWA;;;AACA,eAAeG,KAAf","sourcesContent":["// store.js\n\nimport {createStore, applyMiddleware} from 'redux';\nimport rootReducer from '../reducers/rootReducer';\nimport thunk from 'redux-thunk';\nimport {composeWithDevTools} from 'redux-devtools-extension/developmentOnly';\nimport {createLogger} from 'redux-logger';\n\nconst logger = createLogger({\n    /* https://github.com/evgenyrodionov/redux-logger */\n    collapsed: true,\n    diff: true\n});\n\nconst  store = function (initialState) {\n    return createStore(\n        rootReducer, \n        initialState, \n        composeWithDevTools(\n            /* logger must be the last middleware in chain to log actions */\n            applyMiddleware(thunk, logger)  \n        )\n    );\n}\n\n// export default configureStore;\nexport default store;"]},"metadata":{},"sourceType":"module"}