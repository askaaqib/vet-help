{"ast":null,"code":"// authentication.js\nimport axios from 'axios';\nimport { GET_ERRORS } from './types'; // var multer  = require('multer')\n// var upload = multer({ dest: 'public/uploads' })\n\nexport var createPetProfile = function createPetProfile(pet, history) {\n  return function (dispatch) {\n    axios.post('/api/createpet', pet).then(function (res) {\n      return history.push('/pets');\n    }).catch(function (err) {\n      dispatch({\n        type: GET_ERRORS\n      });\n    });\n  };\n};\nexport var getAllPets = function getAllPets(history) {\n  return function (dispatch) {\n    axios.get('/api/pets', pet).then(function (res) {\n      return history.push('/pets');\n    });\n  };\n};","map":{"version":3,"sources":["/var/www/html/vet-help/mern/react/src/actions/petprofile.js"],"names":["axios","GET_ERRORS","createPetProfile","pet","history","dispatch","post","then","res","push","catch","err","type","getAllPets","get"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,SAA3B,C,CACA;AACA;;AAEA,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,GAAD,EAAMC,OAAN;AAAA,SAAkB,UAAAC,QAAQ,EAAI;AAC7DL,IAAAA,KAAK,CAACM,IAAN,CAAW,gBAAX,EAA6BH,GAA7B,EAAkCI,IAAlC,CAAuC,UAAAC,GAAG;AAAA,aAAIJ,OAAO,CAACK,IAAR,CAAa,OAAb,CAAJ;AAAA,KAA1C,EACCC,KADD,CACO,UAAAC,GAAG,EAAI;AACbN,MAAAA,QAAQ,CAAC;AACRO,QAAAA,IAAI,EAAEX;AADE,OAAD,CAAR;AAGA,KALD;AAMA,GAP+B;AAAA,CAAzB;AASP,OAAO,IAAMY,UAAU,GAAG,SAAbA,UAAa,CAACT,OAAD;AAAA,SAAa,UAAAC,QAAQ,EAAI;AAClDL,IAAAA,KAAK,CAACc,GAAN,CAAU,WAAV,EAAuBX,GAAvB,EAA4BI,IAA5B,CAAiC,UAAAC,GAAG;AAAA,aAAIJ,OAAO,CAACK,IAAR,CAAa,OAAb,CAAJ;AAAA,KAApC;AACA,GAFyB;AAAA,CAAnB","sourcesContent":["// authentication.js\nimport axios from 'axios';\nimport { GET_ERRORS } from './types';\n// var multer  = require('multer')\n// var upload = multer({ dest: 'public/uploads' })\n\nexport const createPetProfile = (pet, history) => dispatch => {\n\taxios.post('/api/createpet', pet).then(res => history.push('/pets'))\n\t.catch(err => {\n\t\tdispatch({\n\t\t\ttype: GET_ERRORS\n\t\t});\n\t});\n}\n\nexport const getAllPets = (history) => dispatch => {\n\taxios.get('/api/pets', pet).then(res => history.push('/pets'))\n}\n"]},"metadata":{},"sourceType":"module"}